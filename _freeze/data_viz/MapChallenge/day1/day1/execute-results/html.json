{
  "hash": "dab72bcb826a133765e594fcf9ee4de8",
  "result": {
    "markdown": "---\ntitle: \"Day 01\" \ndate: '2022-08-01'\nimage: day1.png\ncategories:\n  - R\n  - Data Viz \n  - sf\n  - ggplot2\ndescription: 'Day 1 form #30 Day Map Challenge'\n---\n\n\n# R code to visualize earthquakes in Peru\n\n## Load the necessary libraries\n\nIn this step, the `PeruData` (my package), `lubridate`, `cowplot`, `sysfonts`, and `showtext` libraries are loaded using the `librarian::shelf()` function and add a Google font.\n\nThe font \"Josefin Sans\" is added from Google Fonts using the function `font_add_google()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrarian::shelf(\n    PeruData\n    , lubridate\n    , cowplot\n    , sysfonts\n    , showtext\n    , tidyverse \n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n  The 'cran_repo' argument in shelf() was not set, so it will use\n  cran_repo = 'https://cran.r-project.org' by default.\n\n  To avoid this message, set the 'cran_repo' argument to a CRAN\n  mirror URL (see https://cran.r-project.org/mirrors.html) or set\n  'quiet = TRUE'.\n```\n:::\n\n```{.r .cell-code}\nfont_add_google(\"Josefin Sans\")\n\nshowtext_auto()\n\nfont1 <- \"Josefin Sans\"\n```\n:::\n\n\nIn this step, the igp object data from the PeruData library is filtered to keep only the records after the year 2022 using the `filter()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nigp_2022 <- filter(igp, year(date) > 2021)\n```\n:::\n\n\nWe are going to create a graph using the `ggplot2` library. Geometric layers such as polygons and points are added using the `geom_sf()`and `geom_point()` functions. You can also customize the colors and sizes of the points using the `scale_color_manual()` and `scale_size()` functions. The chart is set to have a background with no visuals using `theme_void()`, and the legend is hidden with `theme(legend.position = \"none\")`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap <-\n    ggplot() +\n    geom_sf(data = map_peru_depa, color = 'gray20', fill = \"gray80\") +\n    geom_point(\n        data = filter(igp_2022, alert != \"Red\")\n        , aes(x = lon, y = lat, color = alert, size = magn)\n        , alpha = .4\n    ) +\n    geom_point(\n        data = filter(igp_2022, alert == \"Red\")\n        , aes(x = lon, y = lat, color = alert, size = magn)\n        , alpha = .6\n    ) +\n    geom_point(\n        data = igp_2022\n        , aes(x = lon, lat, color = alert)\n    ) +\n    scale_color_manual(\n        values = c(\"#087004\", \"#890b0d\", \"#c9c912\")\n    ) +\n    scale_size(range = c(2, 15)) +\n    theme_void() +\n    theme(\n        legend.position = \"none\"\n    )\nmap\n```\n\n::: {.cell-output-display}\n![](day1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nFinally we add labels to the graph with `cowplot`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdraw(map) +\n    draw_label(label = \"Alert (Mag)\", x = 0.85, y = 0.65, color = \"white\", fontfamily = font1,hjust = .6, fontface = \"bold\", size = 65) +\n    draw_label(label = \"> 6\", x = 0.85, y = 0.60, color = \"#d80d1a\", fontfamily = font1,hjust = 1, fontface = \"bold\", size = 65) +\n    draw_label(label = \"4.5 - 6\", x = 0.85, y = 0.55, color = \"#dbcc29\", fontfamily = font1,hjust = 1, fontface = \"bold\", size = 65) +\n    draw_label(label = \"< 4.5\", x = 0.85, y = 0.5, color = \"#3ebc40\", fontfamily = font1, hjust = 1, fontface = \"bold\", size = 65) +\n    theme(\n        plot.background = element_rect(fill = \"grey12\")\n        , legend.position = \"none\"\n    ) +\n    draw_label(label = \"Earthquakes in Peruvian territory (year 2022)\", color = \"white\", hjust = 0, x = 0.02, y = 0.12, fontfamily = font1, size = 32) +\n    draw_label(label = \"#30DayMapChallenge | Day 1: Points\", color = \"white\", hjust = 0, x = 0.02, y = 0.09, fontfamily = font1, size = 32) +\n    draw_label(label = \"Data: IGP with PeruData library\", color = \"white\", hjust = 0, x = 0.02, y = 0.06, fontfamily = font1, size = 32) +\n    draw_label(label = \"Created by @JhonKevinFlore1\", color = \"white\", hjust = 0, x = 0.02, y = 0.03, fontfamily = font1, size = 32)\n```\n\n::: {.cell-output-display}\n![](day1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nInside the console it doesn't look good, but saving the graph, we see a different presentation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day1.png\", units = \"cm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 17.8 x 12.7 cm image\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"day1.png\")\n```\n\n::: {.cell-output-display}\n![](day1.png){width=1050}\n:::\n:::\n",
    "supporting": [
      "day1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}