{
  "hash": "89b995e1a1d00639435b6c6f794f6ef0",
  "result": {
    "markdown": "---\ntitle: \"Day 03\" \ndate: '2022-08-03'\nimage: day3.png\ncategories:\n  - R\n  - Data Viz \n  - sf\n  - ggplot2\ndescription: 'Day 3 form #30 Day Map Challenge'\n---\n\n\n# `PeruData` Covid datasets\n\nTo start, we load the necessary libraries using `librarian::shelf()`:\n\n-   PeruData: Provides access to data related to Peru.\n-   showtext: Enables text rendering in plots.\n-   Tidyverse: Tidyverse universe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(cache = T)\n```\n:::\n\n::: {.cell hash='day3_cache/html/unnamed-chunk-2_86f8318ec2e6dff603e54846586258e2'}\n\n```{.r .cell-code}\nlibrarian::shelf(\n    PeruData\n    , showtext\n    , tidyverse\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n  The 'cran_repo' argument in shelf() was not set, so it will use\n  cran_repo = 'https://cran.r-project.org' by default.\n\n  To avoid this message, set the 'cran_repo' argument to a CRAN\n  mirror URL (see https://cran.r-project.org/mirrors.html) or set\n  'quiet = TRUE'.\n```\n:::\n:::\n\n\n1.  Filtering the `covid_casos_fallecidos` dataset using various conditions to select the relevant data.\n2.  Selecting specific columns using `select()` and renaming them using `rename()`.\n3.  Grouping the data by `departamento` and `provincia` and calculating the sum of all columns using `with_groups()` and `mutate()`.\n4.  Removing duplicate rows using `distinct()` and dropping any rows with missing values using `drop_na()`.\n5.  Calculating the COVID lethality rate (`covid_leta`) by dividing `total_fallecidos` by `total_casos` and rounding the result.\n6.  Renaming the columns to more meaningful names using `rename()`.\n\n\n::: {.cell hash='day3_cache/html/unnamed-chunk-3_b8469bf23b0c0ea6e63d7563c272387f'}\n\n```{.r .cell-code}\nletalida <-\n    covid_casos_fallecidos |>\n    filter(\n        lubridate::year(fecha) > 2021\n        , total_casos > 0\n        ) |>\n    filter(!(departamento %in% c(\"arica\", \"callao\"))) |>\n    select(departamento, provincia, total_casos, total_fallecidos) |>\n    with_groups(\n        c(departamento, provincia),\n        ~mutate(., across(everything(), sum))\n    ) |>\n    distinct() |>\n    drop_na() |>\n    mutate(covid_leta = round((total_fallecidos/total_casos) * 100, 5)) |>\n    rename(\n        depa = 1\n        , prov = 2\n    )\n```\n:::\n\n\nAfter preparing the data\n\n1.  Simplifying the geometry of the `map_peru_prov` dataset using `rmapshaper::ms_simplify()` to reduce complexity.\n2.  Joining the simplified geometry dataset with the lethality data using `right_join()`.\n\n\n::: {.cell hash='day3_cache/html/unnamed-chunk-4_e35a7db7c3b2440c958548ee5e74aba3'}\n\n```{.r .cell-code}\nprov_covid <-\n    map_peru_prov |>\n    rmapshaper::ms_simplify(keep = .03) |>\n    right_join(letalida) |>\n    drop_na(geometry)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(depa, prov)`\n```\n:::\n:::\n\n\nWe proceed with creating the plot:\n\n1.  Adding layers to the plot using `geom_sf()` to visualize the province-level COVID lethality.\n2.  Adding a base map layer using `geom_sf()` to show the department boundaries.\n3.  Customizing the theme to have a void background and adjusting various visual elements.\n4.  Adding text labels to the plot using `geom_text()` to display department names.\n5.  Setting plot titles, subtitles, and captions using `labs()`.\n6.  Configuring the colorbar legend using `guides()` and `guide_colorbar()`.\n\n\n::: {.cell hash='day3_cache/html/unnamed-chunk-5_646569572ef3aa541150c7c99151a533'}\n\n```{.r .cell-code}\ncl <- colorRampPalette(c(\"gray40\", \"#DF2808\"))\n\nggplot()  +\n    geom_sf(data = prov_covid, aes(fill = covid_leta, geometry = geometry), size = .1) +\n    geom_sf(data = rmapshaper::ms_simplify(map_peru_depa, keep = .03), fill = NA, color = 'gray80', alpha = .2) +\n    scale_fill_gradientn(colors = cl(3)) +\n    theme_void() +\n    # geom_text(\n    #     data = map_peru_depa\n    #     , aes(x_center, y_center, label = str_to_sentence(depa)\n    #     )\n    #     , color = \"white\"\n    #     , size = 2.5\n    # ) +\n    labs(\n        title = \"Letalidad COVID (2022)\"\n        , subtitle = \"Por provincias\"\n        , caption = \"#30DayMapChallenge | Day 3: Polygons\\nData: MMINSA | Created by @JhonKevinFlore1\"\n        , fill = \"Letalidad (%)\"\n    ) +\n    guides(\n        fill = guide_colorbar(\n            barheight = unit(1.5, units = \"mm\"),\n            barwidth = unit(90, units = \"mm\"),\n            direction = \"horizontal\",\n            ticks.colour = \"grey10\",\n            title.position = \"top\",\n            title.hjust = 0.5)\n        ) +\n    theme(\n        plot.background = element_rect(fill = \"grey10\", color = NA)\n        , legend.position = c(.5, .05)\n        , legend.title = element_text(color = \"grey75\")\n        , legend.text = element_text(color = \"grey75\")\n        , plot.title = element_text(color = \"grey75\")\n        , plot.subtitle = element_text(color = \"grey75\")\n        , plot.caption = element_text(color = \"grey75\")\n    )\n```\n\n::: {.cell-output-display}\n![](day3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nWe save, and read again to see the result\n\n\n::: {.cell hash='day3_cache/html/unnamed-chunk-6_6fc9cbbcce8325fb68a23b41ea5fd06c'}\n\n```{.r .cell-code}\nggsave(\"day3.png\", height = 8, width = 5, units = \"in\")\n```\n:::\n\n::: {.cell hash='day3_cache/html/unnamed-chunk-7_222ad596952d23b8d776c7500677be0d'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"day3.png\")\n```\n\n::: {.cell-output-display}\n![](day3.png){width=1050}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}