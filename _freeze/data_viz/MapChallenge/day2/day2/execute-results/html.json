{
  "hash": "b567368523b56a3af329995c38c3eec1",
  "result": {
    "markdown": "---\ntitle: \"Day 02\" \ndate: '2022-08-02'\nimage: day2.png\ncategories:\n  - R\n  - Data Viz \n  - sf\n  - ggplot2\ndescription: 'Day 2 form #30 Day Map Challenge'\n---\n\n\n\n\n# Generating Hydrographic Basins Plot\n\nThe following R code generates a plot of hydrographic basins in Peru, specifically focusing on the Amazonas basin. It utilizes the PeruData and cowplot libraries.\n\nLoading the Required Libraries:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrarian::shelf(\n    PeruData\n    , cowplot\n    , tidyverse\n    , sysfonts\n    , showtext\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n  The 'cran_repo' argument in shelf() was not set, so it will use\n  cran_repo = 'https://cran.r-project.org' by default.\n\n  To avoid this message, set the 'cran_repo' argument to a CRAN\n  mirror URL (see https://cran.r-project.org/mirrors.html) or set\n  'quiet = TRUE'.\n```\n:::\n\n```{.r .cell-code}\nfont_add_google(\"Josefin Sans\")\n\nshowtext_auto()\n\nfont1 <- \"Josefin Sans\"\n```\n:::\n\n\n\nCustom colors to show each hydrographic basin\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc_color <- c(\n    \"#add7ff\"\n    , \"#cc5612\"\n    , \"#2b9574\"\n    , \"#df4576\"\n    , \"#2e62aa\"\n)\n```\n:::\n\n\nReading and Cleaning the Data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuencas <- PeruData::cuencas_gen()\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\namz <- cuencas |> filter(str_detect(nomb_uh_n2, \"Amazonas\"))\namz_sub <-\n    amz |>\n    sf::st_drop_geometry() |>\n    count(nomb_uh_n3, sort = T) |>\n    add_column(color = c_color)\n```\n:::\n\n\n\nFiltering the Amazonas Basin:\n\n\n::: {.cell}\n\n```{.r .cell-code}\namz_sub <- amz |>\n  sf::st_drop_geometry() |>\n  count(nomb_uh_n3, sort = T) |>\n  add_column(color = c_color)\n\nlab_c <- pull(amz_sub, nomb_uh_n3)\nlab_c[3] <- \"U.H. 497\"\n```\n:::\n\n\nCreating the Hydrographic Basins Plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\namz_cuencas <- ggplot() +\n  geom_sf(data = map_peru_peru, color = \"white\", fill = NA, size = .2) +\n  geom_sf(data = amz, aes(size = area_km2, group = nomb_uh_n3, color = nomb_uh_n3), fill = NA) +\n  scale_size(range = c(0, 1.3)) +\n  scale_color_manual(values = pull(amz_sub, color)) +\n  theme_void() \n  \namz_cuencas1 <- amz_cuencas +\n  theme(legend.position = \"none\")\namz_cuencas\n```\n\n::: {.cell-output-display}\n![](day2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nAdding Labels to the Plot:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdraw(xlim = c(0, 1), ylim = c(0, 1))  +\n    draw_plot(amz_cuencas1, x = -.2) +\n    theme(\n        plot.background = element_rect(fill = \"#242c34\")\n    ) +\n    draw_label(label = lab_c[3], x = 0.55, y = 0.85, color = c_color[4], fontfamily = font1,hjust = 0, fontface = \"bold\", size = 55) +\n    draw_label(label = lab_c[1], x = 0.55, y = 0.79, color = c_color[1], fontfamily = font1,hjust = 0, fontface = \"bold\", size = 55) +    # draw_label(label = lab_c[1], x = 0.55, y = 0.85, color = c_color[1], fontfamily = font1,hjust = 0, fontface = \"bold\", size = 55) +\n    draw_label(label = lab_c[2], x = 0.55, y = 0.73, color = c_color[3], fontfamily = font1,hjust = 0, fontface = \"bold\", size = 55) +\n    draw_label(label = lab_c[4], x = 0.55, y = 0.6169, color = c_color[2], fontfamily = font1,hjust = 0, fontface = \"bold\", size = 55) +\n    draw_label(label = lab_c[5], x = 0.55, y = 0.67, color = c_color[5], fontfamily = font1,hjust = 0, fontface = \"bold\", size = 55) +\n    draw_label(\n        label = \"Cuencas hidrograficas del PerÃº (UH Amazonas)\\n#30DayMapChallenge | Day 2: Lines\\nData: ANA | Created by @JhonKevinFlore1\"\n        , lineheight = .3\n        , color = \"white\"\n        , x = .92\n        , y = .08\n        , hjust = 1\n        , fontfamily = font1\n        )\n```\n\n::: {.cell-output-display}\n![](day2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nLike the graph from the first day, the console display of the graph is not clear, so it is saved as a file, in this case, a `png` file, and then the graph is displayed by importing it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day2.png\", units = \"cm\", width = 9.6, height = 8.73)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"day2.png\")\n```\n\n::: {.cell-output-display}\n![](day2.png){width=566}\n:::\n:::\n\n\n\n\n\n\n\n\nkjjk\n\n",
    "supporting": [
      "day2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}