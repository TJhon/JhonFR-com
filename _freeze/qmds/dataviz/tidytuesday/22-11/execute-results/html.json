{
  "hash": "e949e9a92085573190a1875bd5fe1841",
  "result": {
    "markdown": "---\ntitle: \"TidyTuesday 22 / 11\" \ndate: '2022-03-18'\nimage: \"plots/22-11-cran.gif\"\ncategories:\n  - R\n  - Data Viz \n  - ggplot2\ndescription: \"plots/22-11-cran.gif\"\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/22-11-cran.gif\")\n```\n\n::: {.cell-output-display}\n![](plots/22-11-cran.gif)\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nibrarian::shelf(\n    tidyverse\n    , tidytuesdayR\n    , lubridate\n)\n\nsysfonts::font_add_google(\"Montserrat\")\nshowtext::showtext_auto()\n\nt1 <- \"Montserrat\"\ntoday <- tt_load(\"2022-03-15\")\n\ntoday <-\n    today |>\n    map(janitor::clean_names)\n\ncran <- today$cran\nbioc <- today$bioc\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nday_upd <-\n    cran |>\n    mutate(\n        fecha = ymd_hms(date) |> as_date()\n        , fecha1 = paste0(str_sub(date, -4, -1), str_sub(as_date(date, format = \"%a %b %d\"), 5, -1)) |>\n            ymd()\n        , date = ifelse(is.na(fecha), fecha1, fecha) |> as_date()\n        , day = wday(date, label = T)\n        , mes = month(date, label = T)\n        , anio = year(date)\n    )  |>\n    filter(date < lubridate::today()) |>\n    select(!contains(c(\"fecha\", \"date\")))\n\n\n\nd_n <- length(levels(d_16$day))\n# t_p <- colorRampPalette(c(\"#ebf3f4\", \"#168c22\"))\nm_c <- c(\"#168c22\", \"#114177\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmain_df <-\n    day_upd |>\n    count(anio, mes, day) |>\n    with_groups(\n        c(anio, mes)\n        , ~mutate(., f_d = n/sum(n)*100)\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_plot <- function(.anio) {\n    cli::cli_process_start(\"Copute {.val {.anio}}\")\n    if(.anio %% 2 == 1) jj <- \"#168c22\" else jj <- \"#114177\"\n    t_p <- colorRampPalette(c(\"#ebf3f4\", jj))\n    semi_df <-\n        main_df |>\n        filter(anio == .anio)\n    p <-\n        semi_df |>\n        ggplot(color = 'black') +\n        aes(x = mes, y = as.numeric(day), fill = f_d) +\n        geom_tile(color = \"grey35\") +\n        coord_polar(start = -.24) +\n        xlim(c(\"\", levels(d_16$mes))) +\n        ylim(c(-1, d_n + 1)) +\n        annotate(\n            x = \"\"\n            , y = 1:d_n\n            , geom = \"text\"\n            , label = levels(d_16$day)\n            , size = 7\n        ) +\n        labs(\n            subtitle = paste(\"{\", .anio, \"}\")\n            , fill = \"(%)\"\n            , title = \"<----  CRAN  ---->\\n Days with more uploads/updates\"\n            , caption = \"  #TidyTuesday 2022/11\\n  Visualisation: @JhonKevinFlore1\\n\"\n        ) +\n        scale_fill_gradientn(colors = t_p(2)) +\n        guides(\n            fill = guide_colorbar(\n                barheight = unit(1.5, units = \"mm\"),\n                barwidth = unit(10, units = \"mm\"),\n                direction = \"horizontal\",\n                ticks.colour = \"grey10\",\n                title.position = \"bottom\",\n                label.position = \"top\",\n                title.hjust = 0.5)\n        ) +\n        theme_void() +\n        theme(\n            legend.position = c(.5, .5)\n            # , legend.key.size = unit(.2, \"cm\")\n            , legend.text = element_text(size = 16, vjust = -4, family = t1)\n            # , legend.text.align = -1\n            , legend.title = element_text(hjust = .5, size = 20, face = \"bold\", vjust = 2)\n            , axis.text.x = element_text(color = \"black\", hjust = 1, size = 30, face = \"bold\", family = t1)\n            # , axis.text = element_text(color = \"black\", hjust = 1, size = 30)\n            , plot.subtitle = element_text(hjust = .5, face = \"bold\", size = 40)\n            , plot.title = element_text(hjust = .5, face = \"bold\", size = 50, family = t1, lineheight = .19)\n            , plot.background = element_rect(fill = \"#eadece\", color = NA)\n            , plot.caption = element_text(t1, size = 20, lineheight = .3, hjust = 0)\n        )\n    # return(semi_df)\n    plot(p)\n    cli::cli_process_done()\n}\n\nanios <- unique(main_df$anio)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanimation::saveGIF(\n    {\n        purrr::walk(anios, my_plot)\n    }\n    , movie.name = here::here(\"plots\", \"22-11-cran.gif\")\n    , interval = 1\n    , ani.width = 1210\n    , ani.height = 1500\n    , ani.res = 300\n)\n\n\n# my_plot(2022)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}