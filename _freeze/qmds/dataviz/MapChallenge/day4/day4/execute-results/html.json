{
  "hash": "304ae1fc1ec3d0e2e89189e0e1d455b1",
  "result": {
    "markdown": "---\ntitle: \"Day 04\" \ndate: '2022-08-04'\nimage: day4.png\ncategories:\n  - R\n  - Data Viz \n  - sf\n  - ggplot2\ndescription: 'Day 4 form #30 Day Map Challenge'\n---\n\n\n# Creating a Hexagon Map in R: Perú's Elevation\n\nIn this tutorial, we will use R to create a hexagon map representing the elevation of Perú. We will be using several R packages, so make sure you have them installed before proceeding. If not, you can install them using the librarian package as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrarian::shelf(\n    sf\n    , tidyverse\n    , raster\n    , h3jsr\n    , PeruData\n    , RColorBrewer\n    , rgeos\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n  The 'cran_repo' argument in shelf() was not set, so it will use\n  cran_repo = 'https://cran.r-project.org' by default.\n\n  To avoid this message, set the 'cran_repo' argument to a CRAN\n  mirror URL (see https://cran.r-project.org/mirrors.html) or set\n  'quiet = TRUE'.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'h3jsr' was built under R version 4.3.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rgeos' was built under R version 4.3.1\n```\n:::\n:::\n\n\n\n## Loading the Data\n\nWe will start by loading the necessary datasets for our map. In this case, we need the raster data representing Perú's elevation (`raster_peru_alt`), the shapefile of Perú's administrative boundaries (`map_peru_depa` and `map_peru_peru`), and the color palette we will use for the map (`RColorBrewer`).\n\n> To transform a shapefile into a hexagonal format, we need to use the polyfill function from h3jsr.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalt <- getData(\"alt\", country = \"PER\", mask = T) |>\n    mask(map_peru_depa) |>\n    rasterToPoints() |>\n    as_tibble() |>\n    rename(alt = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in getData(\"alt\", country = \"PER\", mask = T): getData will be removed in a future version of raster\n. Please use the geodata package instead\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nPlease note that rgdal will be retired during October 2023,\nplan transition to sf/stars/terra functions using GDAL and PROJ\nat your earliest convenience.\nSee https://r-spatial.org/r/2023/05/15/evolution4.html and https://github.com/r-spatial/evolution\nrgdal: version: 1.6-7, (SVN revision 1203)\nGeospatial Data Abstraction Library extensions to R successfully loaded\nLoaded GDAL runtime: GDAL 3.6.2, released 2023/01/02\nPath to GDAL shared files: C:/Users/Jhon/AppData/Local/R/win-library/4.3/rgdal/gdal\n GDAL does not use iconv for recoding strings.\nGDAL binary built with GEOS: TRUE \nLoaded PROJ runtime: Rel. 9.2.0, March 1st, 2023, [PJ_VERSION: 920]\nPath to PROJ shared files: C:/Users/Jhon/AppData/Local/R/win-library/4.3/rgdal/proj\nPROJ CDN enabled: FALSE\nLinking to sp version:1.6-1\nTo mute warnings of possible GDAL/OSR exportToProj4() degradation,\nuse options(\"rgdal_show_exportToProj4_warnings\"=\"none\") before loading sp or rgdal.\n```\n:::\n\n```{.r .cell-code}\nperu <- st_transform(map_peru_peru, crs = st_crs(map_peru_depa))\nperu_4 <- h3jsr::polygon_to_cells(peru, simple = FALSE, res = 4)\nhex_peru <- h3jsr::cell_to_polygon(peru_4$h3_addresses, simple = F) \n\nmypal <- colorRampPalette(c(\"#F3F8F8\", \"#096060\"))\nh_c <- \"#c5cfd8\"\nbase_cl <- \"#D1E7E7\"\n```\n:::\n\n\n\n## Creating the Hexagon Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n    geom_raster(data = alt, aes(x, y, fill = alt)) +\n    geom_sf(data = hex_peru, fill = NA, color = \"#062a4c\", size = 0.2) +\n    geom_sf(data = map_peru_peru, fill = NA, color = h_c) +\n    geom_sf(data = map_peru_depa, fill = NA, color = \"#08600a\", size = 0.3) +\n    scale_fill_gradientn(colours = mypal(2)) +\n    labs(\n        title = \"Perú: Metros Sobre el Nivel del Mar\",\n        caption = \"\\n#30DayMapChallenge | Day 4: Hexagons\\nCreated by @JhonKevinFlore1\",\n        fill = \"M.S.N.M\"\n    ) +\n    guides(\n        fill = guide_colorbar(\n            barheight = unit(1.8, units = \"mm\"),\n            barwidth = unit(60, units = \"mm\"),\n            direction = \"horizontal\",\n            ticks.colour = \"grey10\",\n            title.position = \"top\",\n            title.hjust = 0.5\n        )\n    ) +\n    theme_void() +\n    theme(\n        plot.background = element_rect(fill = \"#062a4c\", color = NA),\n        legend.title = element_text(color = base_cl, hjust = 0.5, size = 8),\n        legend.text = element_text(color = base_cl, size = 8),\n        legend.position = c(0.3, 0.1),\n        plot.title = element_text(hjust = 0.5, color = base_cl),\n        plot.caption = element_text(hjust = 0, color = base_cl),\n        plot.caption.position = \"panel\"\n    )\n```\n\n::: {.cell-output-display}\n![](day4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nWe save, and read again to see the result\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n    \"day4.png\",\n    units = \"cm\",\n    width = 10.6,\n    height = 17.7\n)\nknitr::include_graphics(\"day4.png\")\n```\n\n::: {.cell-output-display}\n![](day4.png){width=626}\n:::\n:::\n",
    "supporting": [
      "day4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}