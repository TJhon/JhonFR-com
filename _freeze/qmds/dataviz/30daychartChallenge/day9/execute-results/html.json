{
  "hash": "50c660dab9b22ca08d66c9815608298e",
  "result": {
    "markdown": "---\ntitle: \"Day 09\" \ndate: '2022-04-09'\nimage: plots/day9_dcc_22.png\ncategories:\n  - R\n  - Data Viz \n  - ggplot2\n  - Data analysis\ndescription: 'Day 9 from #30dataChartChallenge'\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrarian::shelf(\n  tidyverse\n  , PeruData\n  , ggtext\n)\n\n# inei_endes(\"1638\", \"2020\", \"csv\")\n#\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndir_endes <- \n  dir(here::here(\"data\", \"endes\"), full.names = T)\nendes2020 <- \n  read_csv2(dir_endes[2]) |> \n  janitor::clean_names() \n\ned20 <-\n  endes2020 |> \n  select(edad = ha1, kg = ha2, tll = ha3) |> \n  drop_na() |> \n  filter(kg != 9999) |> \n  arrange(-kg) |> \n  mutate(\n    kg = kg / 10\n    , tll = tll / 1000\n    , rg_edad = cut_width(edad, 10)\n    , imc = kg / (tll)^2\n    , imc_lb = case_when(\n      imc < 18.5 ~ \"b\"\n      , imc > 30 ~ \"t\"\n      , T ~ \"m\"\n    )\n  ) |>\n  with_groups(rg_edad, mutate, m_imc = round(mean(imc), 1)) |> \n  filter(m_imc > 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# alt_cl <- colorRampPalette(c(\"#e5e4d3\", \"#3f2a04\"))\n\n\np <- \n  ggplot(ed20) +\n  aes(rg_edad, imc, group = rg_edad) +\n  # geom_hline(yintercept = 18.5, color = \"orange\") +\n  \n  # geom_hline(yintercept = 18.6, color = \"green\") +\n  # geom_hline(yintercept = 30, color = \"green\") +\n  # geom_hline(yintercept = 30.3, color = \"red\") +\n\n  geom_violin(size = 1.6, alpha = 2) +\n  ggtitle(\n    \"Perú 2020 - Índice de masa corporal (IMC)\"\n    , 'Libreria <span style=\"color:#930f08\">{PeruData}</span> - ENDES'\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 18.5, 25, 30, 62)\n  ) + \n  labs(\n    caption = \n    \"#30DayChartChallenge | Data: INEI\\nDay9: Statistics | Viz: @JhonKevinFlore1\"\n    , x = \"\"\n    , y = 'IMC'\n  ) +\n  annotate(\n    \"rect\"\n    , xmin = 0, xmax = 5.6\n    , ymin = 0 , ymax = 18.5\n    , alpha = .67\n    , fill = \"#04d4b4\"\n  ) + \n  annotate(\n    \"rect\"\n    , xmin = 0, xmax = 5.6\n    , ymin = 18.51 , ymax = 25\n    , alpha = .67\n    , fill = \"#25b405\"\n  ) +\n  annotate(\n    \"rect\"\n    , xmin = 0, xmax = 5.6\n    , ymin = 25 , ymax = 30\n    , alpha = .67\n    , fill = \"#fbb306\"\n  ) +\n  geom_point(aes(y = m_imc), size = 3, shape = 3, alpha = 3) +\n  annotate(\n    \"rect\"\n    , xmin = 0, xmax = 5.6\n    , ymin = 30 , ymax = 62\n    , alpha = .67\n    , fill = \"#fb6405\"\n  ) +\n  geom_text(\n    aes(y = m_imc, label = m_imc)\n    , size = 6\n    , nudge_y = -3\n  ) +\n  geom_text(color = \"gray20\", hjust = 0, aes(x = 0.1, y = 12), label = \"Bajo peso\") +\n  geom_text(color = \"gray20\", hjust = 0, aes(x = 0.1, y = 22), label = \"Normal\") +\n  geom_text(color = \"gray20\", hjust = 0, aes(x = 0.1, y = 28), label = \"Sobre Peso\") +\n  geom_text(color = \"gray20\", hjust = 0, aes(x = 0.1, y = 45), label = \"Obsesidad\") +\n  theme_void() +\n  theme(\n    axis.title.y = element_text(hjust = .1, vjust = 3)\n    , panel.grid.minor = element_blank()\n    , panel.grid.major.x = element_blank()\n    , panel.grid.major.y = element_line(\n      color = \"darkblue\"\n      , size = .5 \n      , linetype = \"dotted\"\n    )\n    , axis.text = element_text(size = 14, color = \"darkblue\")\n    , panel.background = element_rect(\"white\", color = NA)\n    , plot.background = element_rect(\"white\", color = NA)\n    , axis.line = element_blank()\n    , plot.margin = margin(.2, 1, .3, .2, \"cm\")\n    , plot.title = element_markdown(hjust = .5, size = 20)\n    , plot.subtitle = element_markdown(hjust = .5, size = 15, margin = margin(.5, 0, 0, 0, \"cm\"))\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  'plots/day9_dcc_22.png'\n  , plot = p\n  , height = 8\n  , width = 12  \n  , dpi = 500\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics('plots/day9_dcc_22.png')\n```\n\n::: {.cell-output-display}\n![](plots/day9_dcc_22.png){width=3000}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}