{
  "hash": "ba217edfe1624af716d32f1cbe11c76e",
  "result": {
    "markdown": "---\ntitle: \"Day 10\" \ndate: '2022-04-10'\nimage: plots/day10_dcc_22.png\ncategories:\n  - R\n  - Data Viz \n  - ggplot2\n  - Data analysis\n  - Incore\ndescription: 'Day 10 from #30dataChartChallenge'\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrarian::shelf(\n  tidyverse\n  , PeruData\n  , ggtext\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1209)\nsemi_random <- c(sample(unique(incore_2021$region), 4), \"peru\")\n\n\n# unique(incore_2021$pilar)\n  \n\nincor_2_gif <- \n  incore_2021 |> \n  janitor::clean_names() |> \n  filter(!str_detect(pilar, \"Regional\")) |> \n  filter(region %in% semi_random) |> \n  # mutate(\n  #   across(where(is.character), PeruData::tidy_text)\n  #   ) |> \n  filter(indicador == \"General\") |> \n  select(!c(unidad, notas, indicador)) |> \n  mutate(\n    region = str_to_sentence(region)\n  ) |> \n  select(edicion, pilar, region, valor, ano)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- \n  incor_2_gif |> \n  filter(ano == 2021) |> \n  select(!ano) |> \n  select(!edicion) |> \n  pivot_wider(names_from = pilar, values_from = valor) |> \n  # mutate_at(vars(!region), rescale) |> \n  # janitor::clean_names() |> \n  ggradar::ggradar(\n    grid.max = 10\n    , grid.mid = 5\n    , grid.line.width = .5\n    , grid.label.size = 8\n    , group.point.size = 3.5\n    , group.line.width = 0.9\n    , base.size = 20\n    , values.radar = c(0, 5, 10)\n    , axis.line.colour = \"#007A87\"\n    , background.circle.colour = \"white\"\n    # , legend.position = c(.1, .1)\n    , fill = T\n    , fill.alpha = .1\n    , legend.text.size = 10\n  ) +\n  labs(\n    title = 'Perú - <span style=\"color:#0e23af\">**INCORE**</span>'\n    , subtitle = \"Comparación de una selección (seudo aleatoria)\"\n    , caption = \"#30DayChartChallenge | Data: INCORE - IPE\\nDay10: Experimental | Viz: @JhonKevinFlore1\"\n  ) +\n  guides(\n    colour = guide_legend(label.position = \"bottom\")\n    , fill = NULL\n    ) +\n  theme(\n    panel.background = element_rect(\"white\", color = NA)\n    , plot.background = element_rect(\"white\")\n    , legend.background = element_rect(NA)\n    , legend.key = element_rect(NA)\n    , legend.spacing.y = unit(0, \"lines\")\n    , legend.text = element_text(lineheight = 0, margin = margin(0, 0, 0, 0))\n    # , legend.spacing = \n    , legend.margin = margin(c(0, 0, 0, 0))\n    , plot.title = element_markdown(hjust = .5)\n    , plot.subtitle = element_text(hjust = .5, color = \"#999caa\")\n    , plot.margin = margin(.2, 0, 1, 0, unit = \"cm\")\n    , plot.caption = element_text(size = 8, hjust = 0, color = \"#696e8e\") \n    , plot.caption.position = \"panel\"\n    # , legend.position = \"top\"\n    , legend.direction = \"horizontal\"\n    , legend.position = c(.5, .02)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  'plots/day10_dcc_22.png'\n  , plot = p\n  , height = 8 \n  , width = 8\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics('plots/day10_dcc_22.png')\n```\n\n::: {.cell-output-display}\n![](plots/day10_dcc_22.png){width=1200}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}