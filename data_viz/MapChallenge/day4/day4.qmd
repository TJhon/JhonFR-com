---
title: "Day 04" 
date: '2022-08-04'
image: day4.png
categories:
  - R
  - Data Viz 
  - sf
  - ggplot2
description: 'Day 4 form #30 Day Map Challenge'
---

# Creating a Hexagon Map in R: Perú's Elevation

In this tutorial, we will use R to create a hexagon map representing the elevation of Perú. We will be using several R packages, so make sure you have them installed before proceeding. If not, you can install them using the librarian package as follows:

```{r}
librarian::shelf(
    sf
    , tidyverse
    , raster
    , h3jsr
    , PeruData
    , RColorBrewer
    , rgeos
)
```


## Loading the Data

We will start by loading the necessary datasets for our map. In this case, we need the raster data representing Perú's elevation (`raster_peru_alt`), the shapefile of Perú's administrative boundaries (`map_peru_depa` and `map_peru_peru`), and the color palette we will use for the map (`RColorBrewer`).

> To transform a shapefile into a hexagonal format, we need to use the polyfill function from h3jsr.

```{r}
alt <- getData("alt", country = "PER", mask = T) |>
    mask(map_peru_depa) |>
    rasterToPoints() |>
    as_tibble() |>
    rename(alt = 3)

peru <- st_transform(map_peru_peru, crs = st_crs(map_peru_depa))
peru_4 <- h3jsr::polygon_to_cells(peru, simple = FALSE, res = 4)
hex_peru <- h3jsr::cell_to_polygon(peru_4$h3_addresses, simple = F) 

mypal <- colorRampPalette(c("#F3F8F8", "#096060"))
h_c <- "#c5cfd8"
base_cl <- "#D1E7E7"

```


## Creating the Hexagon Map

```{r}
ggplot() +
    geom_raster(data = alt, aes(x, y, fill = alt)) +
    geom_sf(data = hex_peru, fill = NA, color = "#062a4c", size = 0.2) +
    geom_sf(data = map_peru_peru, fill = NA, color = h_c) +
    geom_sf(data = map_peru_depa, fill = NA, color = "#08600a", size = 0.3) +
    scale_fill_gradientn(colours = mypal(2)) +
    labs(
        title = "Perú: Metros Sobre el Nivel del Mar",
        caption = "\n#30DayMapChallenge | Day 4: Hexagons\nCreated by @JhonKevinFlore1",
        fill = "M.S.N.M"
    ) +
    guides(
        fill = guide_colorbar(
            barheight = unit(1.8, units = "mm"),
            barwidth = unit(60, units = "mm"),
            direction = "horizontal",
            ticks.colour = "grey10",
            title.position = "top",
            title.hjust = 0.5
        )
    ) +
    theme_void() +
    theme(
        plot.background = element_rect(fill = "#062a4c", color = NA),
        legend.title = element_text(color = base_cl, hjust = 0.5, size = 8),
        legend.text = element_text(color = base_cl, size = 8),
        legend.position = c(0.3, 0.1),
        plot.title = element_text(hjust = 0.5, color = base_cl),
        plot.caption = element_text(hjust = 0, color = base_cl),
        plot.caption.position = "panel"
    )
```

We save, and read again to see the result

```{r}
ggsave(
    "day4.png",
    units = "cm",
    width = 10.6,
    height = 17.7
)
knitr::include_graphics("day4.png")
```

